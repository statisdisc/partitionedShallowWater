/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.4                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;

    root            "";
    case            "";
    instance        "";
    local           "";

    class           dictionary;
    object          fvSchemes;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default Euler;
}

gradSchemes
{
    default         none;
    curl((streamFunction*(0,0,1))) Gauss linear;
    linearUpwind Gauss linear;
    
    grad(stable.h)   Gauss linear;
    grad(buoyant.h)   Gauss linear;
    
    grad(stable.sigma)    Gauss linear;
    grad(buoyant.sigma)   Gauss linear;
}

divSchemes
{
    default         none;
    div(phi,U)      Gauss linear;
    div(stable.volFlux,stable.h)     Gauss vanLeer; //Gauss vanLeer;
    div(buoyant.volFlux,buoyant.h)   Gauss vanLeer; //Gauss upwind;
}

laplacianSchemes
{
    default         none;
    laplacian(streamFunction) Gauss linear uncorrected;
    laplacian(h)              Gauss linear uncorrected;
}

interpolationSchemes
{
    default            linear;
    interpolate(U)     linear;
    flux((twoOmega^U)) linear;
    flux(convection(phi,U)) linear;
    
    interpolate(grad(stable.Uf))  linearUpwind stable.volFlux linearUpwind;//upwind stable.volFlux;// 
    interpolate(grad(buoyant.Uf)) linearUpwind buoyant.volFlux linearUpwind;//upwind buoyant.volFlux;// 
    interpolate(stable.u)         linear;
    interpolate(buoyant.u)        linear;
    interpolate(h)                linear;
    
    //interpolate((((0.5*lengthScale)*stable.sigma)|((((36*stable.sigma)*(1-stable.sigma))*exp(((-10*lengthScale)*mag(grad(stable.sigma)))))+1))) linear;
    //interpolate((((0.5*lengthScale)*buoyant.sigma)|((((36*buoyant.sigma)*(1-buoyant.sigma))*exp(((-10*lengthScale)*mag(grad(buoyant.sigma)))))+1)))  linear;
}

snGradSchemes
{
    default         uncorrected;
    snGrad(h)       uncorrected;
    snGrad(p)       uncorrected;
}

fluxRequired
{
    default         no;
    h;
}


// ************************************************************************* //
